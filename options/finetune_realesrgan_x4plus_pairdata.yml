name: finetune_RealESRGANx4plus_5k_pairdata
model_type: RealESRGANModel
scale: 4
num_gpu: auto
manual_seed: 0

l1_gt_usm: False
percep_gt_usm: False
gan_gt_usm: False

high_order_degradation: False # do not use built-in degradations

gt_size: 480
queue_size: 180

datasets:
  train:
    name: custom
    type: RealESRGANPairedDataset
    dataroot_gt: "/content/drive/MyDrive/Colab Notebooks/Datasets/custom"
    dataroot_lq: "/content/drive/MyDrive/Colab Notebooks/Datasets/custom"
    meta_info: "/content/drive/MyDrive/Colab Notebooks/Datasets/custom/metadata_train.txt"
    io_backend:
      type: disk

    gt_size: 480
    use_hflip: True
    use_rot: False

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 2
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: validation
    type: PairedImageDataset
    dataroot_gt: "/content/drive/MyDrive/Colab Notebooks/Datasets/custom"
    dataroot_lq: "/content/drive/MyDrive/Colab Notebooks/Datasets/custom"
    meta_info: "/content/drive/MyDrive/Colab Notebooks/Datasets/custom/metadata_val.txt"
    io_backend:
      type: disk

# network structures
network_g:
  type: RRDBNet
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_block: 23
  num_grow_ch: 32

network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  # use the pre-trained Real-ESRNet model
  pretrain_network_g: experiments/pretrained_models/RealESRGAN_x4plus.pth
  param_key_g: params_ema
  strict_load_g: true
  pretrain_network_d: experiments/pretrained_models/RealESRGAN_x4plus_netD.pth
  param_key_d: params
  strict_load_d: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-5
    weight_decay: 0
    betas: [ 0.9, 0.99 ]
  optim_d:
    type: Adam
    lr: !!float 1e-5
    weight_decay: 0
    betas: [ 0.9, 0.99 ]

  scheduler:
    type: MultiStepLR
    milestones: [ 5000 ]
    gamma: 0.5

  total_iter: 5000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean
  # perceptual loss (content and style losses)
  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      'conv1_2': 0.1
      'conv2_2': 0.1
      'conv3_4': 1
      'conv4_4': 1
      'conv5_4': 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1e-1
    style_weight: 0
    range_norm: false
    criterion: l1
  # gan loss
  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1
  contextual_opt:
    type: ContextualLoss
    layer_weights:
      "conv_3_2": 0.15
      "conv_4_2": 0.15
    max_1d_size: 64
    distance_type: "cosine"
    calc_type: "regular"
    z_norm: false
    crop_quarter: false
    b: 1.0
    band_width: 0.5
    use_vgg: true
    net: vgg19
  color_opt:
    type: ColorLoss
    criterion: "l1"
    loss_weight: 1.0

  net_d_iters: 1
  net_d_init_iters: 0

#val:
#  val_freq: 200
#  save_img: True
#
#  metrics:
#    psnr:
#      type: calculate_psnr
#      crop_border: 4
#      test_y_channel: false
#    ssim:
#      type: calculate_ssim
#      crop_border: 4
#      test_y_channel: false

logger:
  print_freq: 100
  save_checkpoint_freq: 1000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

dist_params:
  backend: nccl
  port: 29500